drop table IF EXISTS films_genre CASCADE;
drop table IF EXISTS genre CASCADE;
drop table IF EXISTS friends CASCADE;
drop table IF EXISTS user_like CASCADE;
drop table IF EXISTS users CASCADE;
drop table IF EXISTS films CASCADE;
drop table IF EXISTS MPA CASCADE;

create TABLE IF NOT EXISTS MPA (
                                   MPA_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   MPA_name varchar NOT NULL
);

create TABLE IF NOT EXISTS films (
                                    film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    film_name varchar NOT NULL,
                                    description varchar(200),
                                    release_date date,
                                    duration integer,
                                    MPA_id integer REFERENCES MPA (MPA_id) ON delete RESTRICT,
                                    CONSTRAINT valid_duration CHECK (duration > 0)
);

create TABLE IF NOT EXISTS users (
                                    users_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    email varchar NOT NULL,
                                    login varchar NOT NULL,
                                    users_name varchar NOT NULL ,
                                    birthday date NOT NULL,
                                    CONSTRAINT valid_login CHECK (login <> ' ')
);

create TABLE IF NOT EXISTS user_like (
                                    users_id integer REFERENCES users (users_id) ON delete CASCADE ,
                                    film_id integer REFERENCES films (film_id) ON delete CASCADE ,
                                    PRIMARY KEY (users_id, film_id)
);

create TABLE IF NOT EXISTS genre (
                                    genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    genre_name varchar NOT NULL
);

create TABLE IF NOT EXISTS films_genre (
                                    film_id integer REFERENCES films (film_id) ON delete CASCADE,
                                    genre_id integer REFERENCES genre (genre_id) ON delete CASCADE,
                                    PRIMARY KEY (film_id, genre_id)
);

create TABLE IF NOT EXISTS friends (
                                    friend_id integer REFERENCES users (users_id) ON delete CASCADE,
                                    users_id integer REFERENCES users (users_id) ON delete CASCADE,
                                    confirmation BOOLEAN NOT NULL,
                                    CONSTRAINT validate_request CHECK (friend_id <> users_id),
                                    PRIMARY KEY (friend_id, users_id)
);